Program.Sub.ScreenSU.Start
Gui.FormPrompt..Create
Gui.FormPrompt..Caption("Move Ticket")
Gui.FormPrompt..Size(3450,1665)
Gui.FormPrompt..MinX(0)
Gui.FormPrompt..MinY(0)
Gui.FormPrompt..Position(0,0)
Gui.FormPrompt..BackColor(-2147483633)
Gui.FormPrompt..MousePointer(0)
Gui.FormPrompt..AlwaysOnTop(True)
Gui.FormPrompt..MaxButton(False)
Gui.FormPrompt..MinButton(False)
Gui.FormPrompt..Sizeable(False)
Gui.FormPrompt..Event(UnLoad,FormPrompt_UnLoad)
Gui.FormPrompt.ddlChoice.Create(DropDownList)
Gui.FormPrompt.ddlChoice.Size(3105,330)
Gui.FormPrompt.ddlChoice.Position(105,480)
Gui.FormPrompt.lblMoveTicket.Create(Label,"Move Ticket to print: ",True,1560,255,0,810,210,True,0,"Arial",8,-2147483633,0)
Gui.FormPrompt.cmdSubmit.Create(Button)
Gui.FormPrompt.cmdSubmit.Size(990,375)
Gui.FormPrompt.cmdSubmit.Position(1125,900)
Gui.FormPrompt.cmdSubmit.Caption("Submit")
Gui.FormPrompt.cmdSubmit.Event(Click,cmdSubmit_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.sJob.Declare(String)
Variable.Global.sSuffix.Declare(String)
Variable.Global.sSeq.Declare(String)
Variable.Global.sQty.Declare(String,".000000")
Variable.Global.iBIRunID.Declare(Long,-1)
Variable.Global.iLogID.Declare(Long,-1)
Variable.Global.sSQL.Declare(String)
V.Global.sFilePath.Declare(String)
V.Global.sAddToFile.Declare(String)

V.Global.bScrap.Declare(Boolean)
V.Global.bGood.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Modified 11/05/2018
'Trey S
'For Prompton Tool
'Add prompt for which to print

F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sComments.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.iC.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sTempDir.Declare(String)

F.Intrinsic.String.Build("{0}\MoveTicketLog\MoveTicketLog{1}{2}.txt",V.Caller.FilesDir,V.Caller.User,V.Ambient.Date.FormatYYMMDD,V.Global.sFilePath)
F.Intrinsic.String.Build("{0}\MoveTicketLog",V.Caller.FilesDir,V.Local.sTempDir)
F.Intrinsic.File.DirExists(V.Local.sTempDir,V.Local.bExists)

F.Intrinsic.Control.If(V.Local.bExists,=,False)
	F.Intrinsic.File.CreateDir(V.Local.sTempDir)
F.Intrinsic.Control.EndIf

F.Intrinsic.File.Exists(V.Global.sFilePath,V.Local.bExists)
F.Intrinsic.String.Build("{0}: Hook Fired From - {1}; Terminal - {2}",V.Ambient.Now,V.Caller.Hook, V.Caller.Terminal,V.Global.sAddToFile)

F.Intrinsic.Control.If(V.Local.bExists,=,False)	
	F.Intrinsic.File.String2File(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.Else
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.EndIf

V.global.sQty.Set(".000000")

F.ODBC.Connection!Con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass, 1000)

'if called from update job populate hook
F.Intrinsic.Control.If(V.Caller.Hook,=,"15840")
	Variable.passed.000048.set("Move Ticket")
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf

'verify trmnl is on GCG_5286_MVE_TKT_SU to be able to print label/comments
F.Intrinsic.String.Build("SELECT * FROM GCG_5286_MVE_TKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstX",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstX.EOF,=,True)
	F.Intrinsic.String.Build("{0}: Terminal {1} is not in GCG_5286_MVE_TKT_SU.",V.Ambient.Now,V.Caller.Terminal,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstX.Close

F.Intrinsic.String.Build("DELETE FROM GCG_5286_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.Intrinsic.String.Build("{0}: Deleting old data from GCG_4286_WIP_OP_LABL for Terminal {1}",V.Ambient.Now,V.Caller.Terminal,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.ODBC.Connection!Con.Execute(V.Global.sSQL)

'if called from the script1 button on GUI update job
F.Intrinsic.Control.If(V.Caller.Hook,=,"15850")
	V.Global.bGood.Set(True)
	V.Global.sJob.Set(V.passed.009990)
	V.Global.sSuffix.Set(V.Passed.009991)
	V.Global.sSeq.Set(V.Passed.009992)
	V.Global.sQty.Set(V.Passed.000001)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.Local.sComments)
	
	F.Intrinsic.String.Build("{0}: Job = {1}; Suffix = {2}; Sequence = {3}; Quantity = {4}",V.Ambient.Now,V.Passed.009990,V.Passed.009991,V.Passed.009992,V.Passed.000001,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.String.Build("{0}: Print Ticket called with passed variables:{1}ScrapQty - {2}{1}Employee - {3}{1}Workcenter - {4}{1}Quality Number - {5}{1}Close Flag{6}{1}Comments - {7}{1}Scrap Reference - {8}",V.Ambient.Now,V.Ambient.NewLine,V.Passed.000002,V.Passed.009994,V.Passed.000010,V.Passed.010002,V.Passed.000003,V.Local.sComments,v.Passed.SCRAP-REF,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments",V.Local.sComments,"sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Caller.Hook,=,"15890")
'if called from the Process button on update job
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	
	F.Intrinsic.String.Build("{0}: Job = {1}; Suffix = {2}; Sequence = {3}; Quantity = {4}",V.Ambient.Now,V.Passed.009990,V.Passed.009991,V.Passed.009992,V.Passed.000001,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.String.Build("{0}: Print Ticket called with passed variables:{1}ScrapQty - {2}{1}Employee - {3}{1}Workcenter - {4}{1}Quality Number - {5}{1}Close Flag{6}{1}Comments - {7}{1}Scrap Reference - {8}",V.Ambient.Now,V.Ambient.NewLine,V.Passed.000002,V.Passed.009994,V.Passed.000010,V.Passed.010002,V.Passed.000003,"",v.Passed.SCRAP-REF,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments","","sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Caller.Hook,=,"15915")
'if called from the Process button on update multiple jobs			
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	
	F.Intrinsic.String.Build("{0}: Job = {1}; Suffix = {2}; Sequence = {3}; Quantity = {4}",V.Ambient.Now,V.Passed.009990,V.Passed.009991,V.Passed.009992,V.Passed.000001,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.String.Build("{0}: Print Ticket called with passed variables:{1}ScrapQty - {2}{1}Employee - {3}{1}Workcenter - {4}{1}Quality Number - {5}{1}Close Flag{6}{1}Comments - {7}{1}Scrap Reference - {8}",V.Ambient.Now,V.Ambient.NewLine,".000000","","",V.Passed.010002,V.Passed.000003,"",v.Passed.SCRAP-REF,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",".000000","sEmployee","","sWC","","sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments","","sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.Endif

F.Intrinsic.Control.If(V.Caller.Hook,=,"15881")
'if called from the Process button on update job (new pre-process hook for single and multiple)
	F.Intrinsic.Control.CallSub(LoadDropDown)
	GUI.FormPrompt..Show
	GUI.FormPrompt..WaitForDismiss
	
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.Local.sComments)
	
	F.Intrinsic.String.Build("{0}: Job = {1}; Suffix = {2}; Sequence = {3}; Quantity = {4}",V.Ambient.Now,V.Passed.009990,V.Passed.009991,V.Passed.009992,V.Passed.000001,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.String.Build("{0}: Print Ticket called with passed variables:{1}ScrapQty - {2}{1}Employee - {3}{1}Workcenter - {4}{1}Quality Number - {5}{1}Close Flag{6}{1}Comments - {7}{1}Scrap Reference - {8}",V.Ambient.Now,V.Ambient.NewLine,V.Passed.000002,V.Passed.009994,V.Passed.000010,V.Passed.010002,V.Passed.000003,V.Local.sComments,v.Passed.SCRAP-REF,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments",V.Local.sComments,"sScrapRef",V.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

'if called from cutlist schedule update screen OLL338
F.Intrinsic.Control.If(V.Caller.Hook,=,"41705")
	Function.Intrinsic.BDF.Load("GAB-BDF","AUX001")
	Function.Intrinsic.BDF.ReadRowCount("GAB-BDF",V.Local.iRows)
	Function.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
	Function.Intrinsic.Control.For(V.Local.iC,0,V.Local.iRows,1)
		Function.Intrinsic.BDF.ReadRow("GAB-BDF",V.Local.iC,V.Local.sRet)
		Function.Intrinsic.String.Split(V.Local.sRet,"|~|",V.Local.sRet)
'              get data out of sRet
		V.Global.sJob.Set(V.Local.sRet(0))
		V.Global.ssuffix.Set(V.Local.sRet(1))
		V.Global.sSeq.Set(V.Local.sRet(2))
		F.Intrinsic.String.LPad(V.Global.sSeq,0,6,V.Global.sSeq)
'               set sequence to first labor seq		
		F.Intrinsic.String.Build("SELECT SEQ FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ > '{2}' AND LMO <> 'C' AND LMO <> 'M' AND TASK_SEQ <> 'T' ORDER BY SEQ ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
			V.Global.sSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSel.Close

		V.Global.sQty.Set(V.Local.sRet(9))
		F.Intrinsic.Control.If(V.Global.sQty,=,"")
			V.Global.sQty.Set(".000000")
		F.Intrinsic.Control.EndIf

		F.Intrinsic.String.Build("{0}: Job = {1}; Suffix = {2}; Sequence = {3}; Quantity = {4}",V.Ambient.Now,V.Local.sRet(0),V.Local.sRet(1),V.Global.sSeq,V.Global.sQty,V.Global.sAddToFile)
		F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
		F.Intrinsic.String.Build("{0}: Print Ticket called with passed variables:{1}ScrapQty - {2}{1}Employee - {3}{1}Workcenter - {4}{1}Quality Number - {5}{1}Close Flag{6}{1}Comments - {7}{1}Scrap Reference - {8}",V.Ambient.Now,V.Ambient.NewLine,".000000",V.Caller.User,V.Passed.000179,"","","",v.Passed.SCRAP-REF,V.Global.sAddToFile)
		F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
		F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",".000000","sEmployee",V.Caller.User,"sWC",V.Passed.000179,"sQualitynbr","","sCloseflag","","sComments","","sScrapRef",v.Passed.SCRAP-REF)
	Function.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_5286_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Main.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.String.Build("{0}: Program is closing.",V.Ambient.Now,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
F.ODBC.Connection!Con.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_5286_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.Unload.End

Program.Sub.PrintTicket.Start

F.Intrinsic.Control.SetErrorHandler("PrintTicket_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sScrapQty.Declare(String)
V.Local.sCurPart.Declare(String)
V.Local.sCurDescr.Declare(String)
V.Local.sQtyCompleted.Declare(Float)
V.Local.sNextSeq.Declare(String)
V.Local.sNextPart.Declare(String)
V.Local.sNextDescr.Declare(String)
V.Local.sLMO.Declare(String)
V.Local.sNext_DateStart.Declare(String)
V.Local.sNext_DateDue.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sWOPriority.Declare(String)
V.Local.sPartDescr.Declare(String)
V.Local.sWOQty.Declare(String)
V.Local.sWOCustQty.Declare(String)
V.Local.sWODateDue.Declare(String)
V.Local.sName.Declare(String)
V.Local.sEmployee.Declare(String)
V.Local.sScrapCode.Declare(String)
V.Local.sScrapDescription.Declare(String)
V.Local.sParentJob.Declare(String)
V.Local.sParentSuffix.Declare(String)
V.Local.sParentPart.Declare(String)
V.Local.sParentDescr.Declare(String)
V.Local.sTopParentJob.Declare(String)
V.Local.sTopParentSuffix.Declare(String)
V.Local.sTopParentPart.Declare(String)
V.Local.sTopParentDescr.Declare(String)
V.Local.sParentInitWC.Declare(String)
V.Local.sWC.Declare(String)
V.Local.sQualitynbr.Declare(String)
V.Local.sCloseflag.Declare(String)
V.Local.sComments.Declare(String)
V.Local.sRptLoc.Declare(String)
V.Local.iRptID.Declare(Long)
V.Local.sTPrinter.Declare(String)
V.Local.sScrapPrinter.Declare(String)
V.Local.sScrapFlag.Declare(String)
V.Local.sParams.Declare(String)
V.Local.sValues.Declare(String)
V.Local.sScrapRef.Declare(String)
V.Local.dNext_DateStart.Declare(Date)
V.Local.dNext_DateDue.Declare(Date)
v.Local.iRet.Declare(Long)
V.Local.sRecordLog.Declare(String)
V.Local.sRecordLogFP.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sMessage.Declare(String)

V.Local.sScrapQty.Set(V.Args.sScrapQty)
V.Local.sEmployee.Set(V.Args.sEmployee)
V.Local.sWC.Set(V.Args.sWC)
V.Local.sQualitynbr.Set(V.Args.sQualitynbr)
V.Local.sCloseflag.Set(V.Args.sCloseflag)
V.Local.sComments.Set(V.Args.sComments)
V.Local.sScrapRef.Set(V.Args.sScrapRef)

'if good pieces is 0 then don't continue
F.Intrinsic.Control.If(V.Global.sQty.Float,<=,0,"AND",V.Local.sscrapqty.Float,<=,0)
	F.Intrinsic.String.Build("{0}: Good Quantity and Scrap Quantity are both less than or equal to 0.",V.Ambient.Now,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("SELECT PART, DESCRIPTION, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}' ",V.Global.sjob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sCurPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sCurDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
	V.Local.sQtyCompleted.Set(V.ODBC.Con!rstSel.FieldValTrim!UNITS_COMPLETE)
	
	F.Intrinsic.String.Build("{0}: Values Returned:{1}CurPart - {2}{1}CurDescr - {3}{1}QtyCompleted - {4}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sCurPart,V.Local.sCurDescr,V.Local.sQtyCompleted,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT SEQ, PART, DESCRIPTION, LMO, DATE_START, DATE_DUE, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ > '{2}' AND LMO <> 'C' AND LMO <> 'M' AND TASK_SEQ <> 'T' ORDER BY SEQ ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sNextSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
	V.Local.sNextPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sNextDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
	V.Local.sLMO.Set(V.ODBC.Con!rstSel.FieldValTrim!LMO)
	V.Local.dNext_DateStart.Set(V.ODBC.Con!rstSel.FieldVal!DATE_START)
	V.Local.dNext_DateDue.Set(V.ODBC.Con!rstSel.FieldVal!DATE_DUE)
	
	F.Intrinsic.String.Build("{0}: Values Returned:{1}NextSeq - {2}{1}NextPart - {3}{1}NextDescr - {4}{1}LMO - {5}{1}NextDateStart - {6}{1}NextDueDate - {7}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sNextSeq,V.Local.sNextPart,V.Local.sNextDescr,V.Local.sLMO,V.Local.dNext_DateStart,V.Local.dNext_DateDue,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("{0}: No values returned. Setting dates to 01/01/1900",V.Ambient.Now,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateStart)
	F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateDue)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PART, CUSTOMER, PRIORITY, PART_DESCRIPTION,QTY_ORDER, QTY_CUSTOMER, DATE_DUE FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sCust.Set(V.ODBC.Con!rstSel.FieldValTrim!CUSTOMER)
	V.Local.sWOPriority.Set(V.ODBC.Con!rstSel.FieldValTrim!PRIORITY)
	V.Local.sPartDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!PART_DESCRIPTION)
	V.Local.sWOQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_ORDER)
	V.Local.sWOCustQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_CUSTOMER)
	V.Local.sWODateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
	
	F.Intrinsic.String.Build("{0}: Values Returned:{1}Part - {2}{1}Cust - {3}{1}WOPriority - {4}{1}PartDescr - {5}{1}WOQty - {6}{1}WOCustQty - {7}{1}WODateDue - {8}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sPart,V.Local.sCust,V.Local.sWOPriority,V.Local.sPartDescr,V.Local.sWOQty,V.Local.sWOCustQty,V.Local.sWODateDue,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}' ",V.Local.sCust.PSQLFriendly,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sName.Set(V.ODBC.Con!rstSel.FieldValTrim!NAME_CUSTOMER)
	
	F.Intrinsic.String.Build("{0}: Values Returned:{1}Name - {2}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sName,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT SCRAP_REASON FROM V_JOBS_IN_PROCESS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}' AND EMPLOYEE_NAME = '{3}' ORDER BY SEQUENCE_KEY DESC ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Local.sEmployee.PSQLFriendly,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!SCRAP_REASON)
	F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
	
	F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
		V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
		
		F.Intrinsic.String.Build("{0}: Values Returned:{1}ScrapDescription - {2}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sScrapDescription,V.Global.sAddToFile)
		F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSelA.Close
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PARENT_WO, PARENT_SUFFIX_PARENT FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_WO)
	V.Local.sParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_Suffix_Parent)
	F.Intrinsic.String.Build("SELECT PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
	
	F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
		V.Local.sParentPart.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part)
		V.Local.sParentDescr.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part_Description)
		
		F.Intrinsic.String.Build("{0}: Values Returned:{1}ParentPart - {2}{1}ParentDescr - {3}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sParentPart,V.Local.sParentDescr,V.Global.sAddToFile)
		F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSelA.Close
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT JOB, SUFFIX, PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '000' ",V.Global.sJob,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sTopParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Job)
	V.Local.sTopParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Suffix)
	V.Local.sTopParentPart.Set(V.ODBC.Con!rstSel.FieldValTrim!Part)
	V.Local.sTopParentDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!Part_Description)
	
	F.Intrinsic.String.Build("{0}: Values Returned:{1}TopParentJob - {2}{1}TopParentSuffix - {3}{1}TopParentPart - {4}{1}TopParentDescr - {5}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sTopParentJob,V.Local.sTopParentSuffix,V.Local.sTopParentPart,V.Local.sTopParentDescr,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PART FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND LMO = 'L' ORDER BY SEQ ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sParentInitWC.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	
	F.Intrinsic.String.Build("{0}: Values Returned:{1}ParentInitWC - {2}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sParentInitWC,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_5286_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRW("rstSel",V.global.sSQL)
F.ODBC.Con!rstSel.AddNew
F.ODBC.Con!rstSel.Set!TRMNL(V.Caller.Terminal)
F.ODBC.Con!rstSel.Set!JOB(V.global.sJob)
F.ODBC.Con!rstSel.Set!SUFFIX(V.global.sSuffix)
F.ODBC.Con!rstSel.Set!CUR_SEQ(V.global.sSeq)
F.ODBC.Con!rstSel.Set!CUR_PART(V.Local.sCurPart)
F.ODBC.Con!rstSel.Set!CUR_DESCR(V.Local.sCurDescr)
F.ODBC.Con!rstSel.Set!LMO(V.Local.sLMO)
F.ODBC.Con!rstSel.Set!QTY(V.global.sQty)
F.ODBC.Con!rstSel.Set!WORKCENTER(V.Local.sWC)
F.ODBC.Con!rstSel.Set!EMPLOYEE(V.Local.sEmployee)
F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
F.ODBC.Con!rstSel.Set!SCRAP_CODE(V.Local.sScrapCode)
F.ODBC.Con!rstSel.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
F.ODBC.Con!rstSel.Set!SCRAP_QTY(V.Local.sScrapqty)
F.ODBC.Con!rstSel.Set!CLOSE_FLAG(V.Local.sCloseflag)
F.ODBC.Con!rstSel.Set!PART(V.Local.sPart)
F.ODBC.Con!rstSel.Set!CUSTOMER(V.Local.sCust)
F.ODBC.Con!rstSel.Set!NAME(V.Local.sName)
F.ODBC.Con!rstSel.Set!NEXT_SEQ(V.Local.sNextSeq)
F.ODBC.Con!rstSel.Set!NEXT_PART(V.Local.sNextPart)
F.ODBC.Con!rstSel.Set!NEXT_DESCR(V.Local.sNextDescr)
F.ODBC.Con!rstSel.Set!Parent_Job(V.Local.sParentJob)
F.ODBC.Con!rstSel.Set!Parent_Suffix(V.Local.sParentSuffix)
F.ODBC.Con!rstSel.Set!Parent_Part(V.Local.sParentPart)
F.ODBC.Con!rstSel.Set!Parent_Descr(V.Local.sParentDescr)
F.ODBC.Con!rstSel.Set!Top_Parent_Job(V.Local.sTopParentJob)
F.ODBC.Con!rstSel.Set!Top_Parent_Suffix(V.Local.sTopParentSuffix)
F.ODBC.Con!rstSel.Set!Top_Parent_Part(V.Local.sTopParentPart)
F.ODBC.Con!rstSel.Set!Top_Parent_Descr(V.Local.sTopParentDescr)
F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
F.ODBC.Con!rstSel.Set!NEXT_SEQ_START(V.Local.dNext_DateStart.PervasiveDate)
F.ODBC.Con!rstSel.Set!NEXT_SEQ_DUE(V.Local.dNext_DateDue.PervasiveDate)
F.ODBC.Con!rstSel.Set!WO_PRIORITY(V.Local.sWOPriority)
F.ODBC.Con!rstSel.Set!PART_DESCR(V.Local.sPartDescr)
F.ODBC.Con!rstSel.Set!WO_QTY(V.Local.sWOQty)
F.ODBC.Con!rstSel.Set!WO_CUSTOMER_QTY(V.Local.sWOCustQty)
F.ODBC.Con!rstSel.Set!WO_DUE_DATE(V.Local.sWODateDue)
F.ODBC.Con!rstSel.Set!QTY_COMPLETED(V.Local.sQtyCompleted)
F.ODBC.Con!rstSel.Set!Parent_InitWC(V.Local.sParentInitWC)
F.ODBC.Con!rstSel.Set!Comments(V.Local.sComments)
F.ODBC.Con!rstSel.Update
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("{0}\Custom\GCG_5286_WIP_Operation_Label.rpt",V.Caller.BusintDir,V.Local.sRptLoc)
F.Global.BI.InitializeReport("GCG_5286_WIP_Operation_Label",V.Local.sRptLoc,V.Local.iRptID)

F.Intrinsic.String.Build("SELECT PRINTER, SCRAPPRINTER FROM GCG_5286_MVE_TKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)

F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sTPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!Printer)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter,=,"")
		F.Intrinsic.Control.If(V.Local.sTPrinter,<>,"")
			V.Local.sScrapPrinter.Set(V.Local.sTPrinter)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("No printer found in GCG_5286_MVE_TKT_SU for Terminal '{0}'.",V.Caller.Terminal,V.Local.sMessage)
			F.Intrinsic.UI.Msgbox(V.Local.sMessage,"No Printer Found")
			
			F.Intrinsic.Printer.SelectPrinterDialog
			F.Intrinsic.Control.If(V.Ambient.PrinterDialogSelection,<>,"***CANCEL***")
				V.Local.sScrapPrinter.Set(V.Ambient.PrinterDialogSelection)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		V.Local.sScrapPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("{0}: Scrap Printer = {1}",V.Ambient.Now,V.Local.sScrapPrinter,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

F.Intrinsic.Control.If(V.Global.bGood)
	F.Intrinsic.Control.If(V.Global.sQty.Float,>,0)

		f.Global.BI.GetRunID(v.Global.iBIRunID)
		f.Global.BI.StartLogging(v.Global.iBIRunID,v.Local.iRptID,0,"",v.Global.iLogID)
		V.Local.sScrapflag.Set("N")
		v.Local.sParams.Set("TRMNL*!*Job*!*Suffix*!*Scrapflag")
		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
		f.Global.BI.StopLogging(v.Global.iLogID)
		
		F.Intrinsic.String.Build("{0}: Good Qty Print Values:{1}BIRunID - {2}{1}LogID - {3}{1}Params - {4}{1}Values - {5}{1}RptID - {6}{1}Printer - {7}",V.Ambient.Now,V.Ambient.NewLine,V.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,V.Local.sTPrinter,V.Global.sAddToFile)
		F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
		
		f.Global.BI.RunReportPreProcessor(v.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,8,False,"",1,v.Local.sTPrinter,-1,"","",v.Local.iRet)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Good quantity is 0, no good move ticket will be printed.")
	F.Intrinsic.Control.Endif
	
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.Control.If(V.Caller.Hook, =, 15850)
	V.Global.bScrap.Set(False)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Global.bScrap)

	'F.Intrinsic.Control.If(V.Local.sScrapQty,<>,".000000")
	F.Intrinsic.Control.If(V.Local.sscrapqty.Float,>,0)
		V.Local.sScrapflag.Set("Y")
	
		'Scrap - loop through scrap_data table by scrap_ref = sscrapref
		
		'changing this because for some scrap codes can all be 0 and that causes it to print all of them
		F.Intrinsic.Control.If(V.Local.sScrapRef.Long, =, 0)
			F.Intrinsic.String.Build("SELECT SCRAP_REF, QUALITY, REASON_CODE, QTY FROM SCRAP_DATA WHERE SCRAP_REF = '{0}' and STAT <> 200 and DTL_JOB = '{1}' and DTL_SUFFIX = '{2}' and DTL_CAT = '{3}' and KEY_DATE = '{4}'",V.Local.sScrapRef, V.Global.sJob, V.Global.sSuffix, V.Global.sSeq, V.Ambient.Date.FormatYYYYMMDD,V.Global.sSQL)
		F.Intrinsic.Control.Else
			'F.Intrinsic.String.Build("SELECT SCRAP_REF, QUALITY, REASON_CODE, QTY FROM SCRAP_DATA WHERE SCRAP_REF = '{0}' ",V.Local.sScrapRef,V.Global.sSQL)
			F.Intrinsic.String.Build("SELECT SCRAP_REF, QUALITY, REASON_CODE, QTY FROM SCRAP_DATA WHERE (KEY_DATE + KEY_TIME) = '{0}' and STAT <> 200",V.Local.sScrapRef,V.Global.sSQL)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
		F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
		
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
		
		Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstSel.eof,=,True)
	
			f.Global.BI.GetRunID(v.Global.iBIRunID)
			f.Global.BI.StartLogging(v.Global.iBIRunID,v.Local.iRptID,0,"",v.Global.iLogID)
	
			V.Local.sQualitynbr.Set(V.ODBC.Con!rstSel.FieldValTrim!Quality)
			V.Local.sScrapQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY)
			V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!Reason_Code)
			
			F.Intrinsic.String.Build("{0}: Values Returned:{1}QualityNumber - {2}{1}ScrapQty - {3}{1}ScrapCode - {4}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sQualitynbr,V.Local.sScrapQty,V.Local.sScrapCode,V.Global.sAddToFile)
			F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	
			F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
			
			F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
			F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
			
			F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
			F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
				V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
				
				F.Intrinsic.String.Build("{0}: Values Returned:{1}ScrapDescription - {2}",V.Ambient.Now,V.Ambient.NewLine,V.Local.sScrapDescription,V.Global.sAddToFile)
				F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
			F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstSelA.Close
	
			F.Intrinsic.String.Build("SELECT * FROM GCG_5286_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
			
			F.Intrinsic.String.Build("{0}: Executing Query:{1}{2}",V.Ambient.Now,V.Ambient.NewLine,V.Global.sSQL,V.Global.sAddToFile)
			F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
			
			F.ODBC.Connection!Con.OpenRecordsetRW("rstSelB",V.global.sSQL)
	
			F.ODBC.Con!rstSelB.Set!QUALITY_NO(V.Local.sQualitynbr)
			F.ODBC.Con!rstSelB.Set!SCRAP_CODE(V.Local.sScrapCode)
			F.ODBC.Con!rstSelB.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
			F.ODBC.Con!rstSelB.Set!SCRAP_QTY(V.Local.sscrapqty)
			F.ODBC.Con!rstSelB.Update
			F.ODBC.Con!rstSelB.Close

			v.Local.sParams.Set("TRMNL*!*Job*!*Suffix*!*Scrapflag")
			F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
			' Scrap Printer added as optional quantentine label printer when scrap labels printed on colored label stock
			f.Global.BI.StopLogging(v.Global.iLogID)
			
			F.Intrinsic.String.Build("{0}: Scrap Qty Print Values:{1}BIRunID - {2}{1}LogID - {3}{1}Params - {4}{1}Values - {5}{1}RptID - {6}{1}Printer - {7}",V.Ambient.Now,V.Ambient.NewLine,V.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,V.Local.sTPrinter,V.Global.sAddToFile)
			F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
		
			f.Global.BI.RunReportPreProcessor(v.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,8,True,"",1,v.Local.sScrapPrinter,-1,"","",v.Local.iRet)
			F.ODBC.con!rstSel.MoveNext
		Function.Intrinsic.Control.Loop
		F.ODBC.Con!rstSel.Close
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Scrap quantity is 0, no scrap move ticket will be printed.")
	F.Intrinsic.Control.Endif
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("PrintTicket_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_5286_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.PrintTicket.End

Program.Sub.LoadDropDown.Start
GUI.FormPrompt.ddlChoice.AddItem("Scrap")
GUI.FormPrompt.ddlChoice.AddItem("Good")
GUI.FormPrompt.ddlChoice.AddItem("Both")
GUI.FormPrompt.ddlChoice.AddItem("Neither")
Program.Sub.LoadDropDown.End

Program.Sub.FormPrompt_UnLoad.Start
F.Intrinsic.String.Build("{0}: Program is closing.",V.Ambient.Now,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
F.Intrinsic.Control.End
Program.Sub.FormPrompt_UnLoad.End

Program.Sub.cmdSubmit_Click.Start
F.Intrinsic.Control.If(V.Screen.FormPrompt!ddlChoice.Value.Trim, =, "Scrap")
	V.Global.bScrap.Set(True)
	V.Global.bGood.Set(False)
F.Intrinsic.Control.ElseIf(V.Screen.FormPrompt!ddlChoice.Value.Trim, =, "Good")
	V.Global.bScrap.Set(False)
	V.Global.bGood.Set(True)
F.Intrinsic.Control.ElseIf(V.Screen.FormPrompt!ddlChoice.Value.Trim, =, "Both")
	V.Global.bScrap.Set(True)
	V.Global.bGood.Set(True)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("{0}: Program is closing.",V.Ambient.Now,V.Global.sAddToFile)
	F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("{0}: Scrap? - {1}; Good? - {2}",V.Ambient.Now,V.Global.bScrap,V.Global.bGood,V.Global.sAddToFile)
F.Intrinsic.File.Append2FileNewLine(V.Global.sFilePath,V.Global.sAddToFile)

GUI.FormPrompt..Visible(False)
Program.Sub.cmdSubmit_Click.End

Program.Sub.Comments.Start
${$0$}$GCG_5286_Print_Report_WIP_Operation$}$Strider$}$12/8/2015$}$False
${$1$}$$}$$}$3$}$41705$}$Pre-Ok$}$12/8/2015 12:39:49 PM$}$(Program: OLL338; Screen: OLS338)

${$1$}$$}$$}$2$}$15881$}$OLS003 Process Line Hook$}$12/8/2015 12:39:36 PM$}$(Program: OLG002; Screen: OLS003)

${$1$}$$}$$}$1$}$15850$}$OLS003-PB-SCRIPT-1-HOOK (On-line GUI)$}$12/8/2015 12:39:19 PM$}$(Program: OLG002; Screen: OLS003)

${$1$}$$}$$}$0$}$15840$}$OLS003-POPULATE-HOOK (On-line GUI)$}$12/8/2015 12:38:39 PM$}$(Program: OLG002; Screen: OLS003)

${$2$}$$}$$}$1$}$4$}$SQL$}$12/8/2015 12:40:37 PM$}$GCG_5286_WIP_OP_LABL
${$2$}$$}$$}$0$}$2$}$GAB$}$12/8/2015 12:38:39 PM$}$GCG_5286_MOVE_TCKT_TRMNL_COMMENTS.gas
${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$Purpose:
? Paperless ? at least less paper?
? Identify movement of partial/complete transfers between operations
? Identify scrap/rejected parts for quality (ISO required)

Move Tickets will print for both good and scrap pieces reported when updating labor on an active work order.


Original Project 1011
Program.Sub.Comments.End
